#!/usr/bin/env python
"""Lorem ipsum."""

import logging
from pathlib import Path
import subprocess

from fabric.connection import Connection

LOGGER = logging.getLogger("pull_from_board")
EXPECTED_DEV_COMPONENTS = {"cloudflare"}
EXPECTED_HACS_COMPONENTS = {"hacs"} | {
    "network_scanner",
    "peloton",
    "snoo",
    "waste_collection_schedule",
}


def _get_custom_components(host: str) -> set[str]:
    with Connection(host) as c, c.sftp() as sftp:
        return set(sftp.listdir("config/custom_components"))


def _copy_from_board(host: str, root_dir: Path, components: set[str]) -> None:
    for component in components:
        results = subprocess.Popen(  # noqa: S602
            f"rsync -av {host}:config/custom_components/{component} {(root_dir / "homeassistant" / "components")}",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        )
        stdout, stderr = results.communicate()
        assert (
            results.returncode == 0
        ), f"[{component} rsync failed with: {stderr.decode()}"
        LOGGER.debug(stdout.decode())


# rsync -av --exclude={'hacs','network_scanner','peloton','snoo','waste_collection_schedule'} home-assistant:config/custom_components/* homeassistant/components
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    HOSTNAME = "home-assistant"
    ROOT_DIR = Path(__file__).parents[1]
    custom_components = _get_custom_components(HOSTNAME)

    undeclared_components = custom_components - (
        EXPECTED_DEV_COMPONENTS | EXPECTED_HACS_COMPONENTS
    )
    assert (
        undeclared_components == set()
    ), f"The following components must be declared as under development or pulled from HACS: {sorted(undeclared_components)}"

    _copy_from_board(HOSTNAME, ROOT_DIR, custom_components - EXPECTED_HACS_COMPONENTS)
